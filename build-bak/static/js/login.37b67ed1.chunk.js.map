{"version":3,"sources":["service/user/profile/UserService.js","views/Login/Login.jsx","views/Login/index.js","api/XHRClient.js"],"names":["loginImpl","request","config","method","url","data","requestWithAction","login","getUserList","getUserListAction","modifyPassword","changeUserPasswordAction","fpPromise","FingerprintJS","load","Login","state","loading","enterLoading","setState","handleLoginSuccess","values","token","username","auth","accessToken","localStorage","setItem","refreshToken","JSON","stringify","message","success","props","history","push","handleLoginSubmit","e","a","fp","get","result","phone","password","deviceId","visitorId","app","formRef","React","createRef","notification","destroy","this","timer","clearTimeout","user","className","onFinish","ref","Item","name","rules","required","prefix","UserOutlined","type","style","color","placeholder","LockOutlined","htmlType","Component","withRouter","isRrefreshingAccessToken","requests","instance","axios","create","timeout","redirectToLogin","store","dispatch","removeUserAction","window","location","href","action","then","response","Object","keys","length","catch","error","console","defaults","headers","post","interceptors","use","getItem","Promise","reject","status","statusCode","resultCode","resolve","errorMessage","msg","baseURL","requestWithoutAction","refreshAccessTokenImpl","refreshAccessToken","refreshResult","forEach","cb","res","finally","handleRefreshAccessToken","log"],"mappings":"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","file":"static/js/login.37b67ed1.chunk.js","sourcesContent":["import { login, getUserListAction, changeUserPasswordAction } from '@/actions/UserActions'\nimport { requestWithAction, requestWithoutAction } from '@/api/XHRClient'\n\nexport function loginImpl(request) {\n    const config = {\n        method: 'post',\n        url: `/manage/admin/user/login`,\n        data: request\n    }\n    return requestWithAction(config, login)\n}\n\nexport function getUserList(request) {\n    const config = {\n        method: 'post',\n        url: `/manage/user/v1/page`,\n        data: request\n    }\n    return requestWithAction(config, getUserListAction)\n}\n\nexport function modifyPassword(request) {\n    const config = {\n        method: 'post',\n        url: `/manage/user/v1/pwd/edit`,\n        data: request\n    }\n    return requestWithAction(config, changeUserPasswordAction)\n}\n\nexport function removeLoginedUserCache(request) {\n    //store.dispatch(action(removeUserAction))\n}\n","import React, { Component } from 'react'\nimport { Layout, Input, Form, Button, Divider, message, notification } from 'antd'\nimport { withRouter } from 'react-router-dom'\nimport '@/style/view-style/login.scss'\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\nimport { loginImpl } from '@/service/user/profile/UserService'\nimport FingerprintJS from '@fingerprintjs/fingerprintjs'\n\n// Initialize an agent at application startup.\nconst fpPromise = FingerprintJS.load()\nclass Login extends Component {\n    state = {\n        loading: false\n    }\n\n    enterLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    handleLoginSuccess = values => {\n        // let params = queryString.parse(this.props.location.search)\n        // if (Object.keys(params).length !== 0 && params.logined === false) {\n        //    return\n        // }\n        if (values.token && values.token.token) {\n            // 这里可以做权限校验 模拟接口返回用户权限标识\n            switch (values.username) {\n                case 'admin':\n                    values.auth = 0\n                    break\n                default:\n                    values.auth = 0\n            }\n            let token = values.token.accessToken\n            localStorage.setItem('token', token)\n            localStorage.setItem('refreshToken', values.token.refreshToken)\n            localStorage.setItem('accessToken', values.token.accessToken)\n            localStorage.setItem('user', JSON.stringify(values))\n            this.enterLoading()\n            message.success('登录成功!')\n            this.props.history.push('/')\n        }\n    }\n\n    handleLoginSubmit = e => {\n        // https://stackoverflow.com/questions/1873983/what-does-the-leading-semicolon-in-javascript-libraries-do\n        ;(async () =>{\n            // Get the visitor identifier when you need it.\n            const fp = await fpPromise\n            const result = await fp.get()\n            var request = {\n                phone: e.username,\n                password: e.password,\n                deviceId: result.visitorId,\n                app: 6\n            }\n            loginImpl(request)\n        })()\n    }\n\n    componentWillUnmount() {\n        notification.destroy()\n        this.timer && clearTimeout(this.timer)\n    }\n\n    formRef = React.createRef()\n\n    render() {\n        let user = this.props.user\n        this.handleLoginSuccess(user)\n\n        return (\n            <Layout className='login animated fadeIn'>\n                <div className='model'>\n                    <div className='login-form'>\n                        <h3>后台管理系统</h3>\n                        <Divider />\n                        <Form onFinish={this.handleLoginSubmit} ref={this.formRef}>\n                            <Form.Item name='username' rules={[{ required: true, message: '请输入用户名!' }]}>\n                                <Input\n                                    prefix={<UserOutlined type='user' style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder='用户名'\n                                />\n                            </Form.Item>\n                            <Form.Item name='password' rules={[{ required: true, message: '请输入密码' }]}>\n                                <Input\n                                    prefix={<LockOutlined type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    type='password'\n                                    placeholder='密码'\n                                />\n                            </Form.Item>\n                            <Form.Item>\n                                <Button\n                                    type='primary'\n                                    htmlType='submit'\n                                    className='login-form-button'\n                                    loading={this.state.loading}>\n                                    登录\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\n\nexport default withRouter(Login)\n","import Login from './Login.jsx'\n\nexport default Login\n","import axios from 'axios'\nimport store from '../store/index'\nimport { message } from 'antd'\nimport { removeUserAction } from '../actions/UserActions'\n\nlet isRrefreshingAccessToken = false\n// 重试队列，每一项将是一个待执行的函数形式\nlet requests = []\n\nconst instance = axios.create({\n    timeout: 15000\n})\n\ninstance.defaults.headers.post['Content-Type'] = 'application/json'\n\ninstance.interceptors.request.use(\n    config => {\n        const accessToken = localStorage.getItem('accessToken')\n        accessToken && (config.headers['x-access-token'] = accessToken)\n        return config\n    },\n    error => {\n        return Promise.reject(error)\n    }\n)\n\ninstance.interceptors.response.use(\n    response => {\n        if (response.status === 200 && response.data.statusCode === '200' && response.data.resultCode === '200') {\n            return Promise.resolve(response)\n        } else if (response.data.statusCode === '907') {\n            redirectToLogin()\n        } else if (response.data.statusCode === '904') {\n            //登录已失效\n            redirectToLogin()\n        } else if (response.data.resultCode === '00100100004016') {\n            handleRefreshAccessToken(response)\n        } else {\n            let errorMessage = response.data.msg\n            message.error(errorMessage)\n            return Promise.reject(response)\n        }\n    },\n    error => {\n        // 比如： token 过期， 无权限访问， 路径不存在， 服务器问题等\n        switch (error.response.status) {\n            case 401:\n                break\n            case 403:\n                break\n            case 404:\n                break\n            case 500:\n                break\n            default:\n                console.log('其他错误信息')\n        }\n        return Promise.reject(error)\n    }\n)\n\nexport function redirectToLogin() {\n    store.dispatch(removeUserAction(''))\n    window.location.href = '/#/login'\n}\n\nfunction handleRefreshAccessToken(response) {\n    const config = response.config\n    if (!isRrefreshingAccessToken) {\n        isRrefreshingAccessToken = true\n        // access token invalid\n        refreshAccessToken()\n            .then(refreshResult => {\n                let accessToken = refreshResult.accessToken\n                if (accessToken) {\n                    localStorage.setItem('token', accessToken)\n                    localStorage.setItem('accessToken', accessToken)\n                    // retry the last request\n                    instance.defaults.headers['x-access-token'] = accessToken\n                    requests.forEach(cb => cb(accessToken))\n                    requests = []\n                    return instance(config)\n                }\n            })\n            .catch(res => {\n                console.error('refreshtoken error =>', res)\n                redirectToLogin()\n            })\n            .finally(() => {\n                isRrefreshingAccessToken = false\n            })\n    } else {\n        // 正在刷新token，将返回一个未执行resolve的promise\n        return new Promise(resolve => {\n            // 将resolve放进队列，用一个函数形式来保存，等token刷新后直接执行\n            requests.push(token => {\n                config.baseURL = ''\n                config.headers['x-access-token'] = token\n                resolve(instance(config))\n            })\n        })\n    }\n}\n\nfunction refreshAccessToken() {\n    const refreshToken = localStorage.getItem('refreshToken')\n    if (!refreshToken) {\n        redirectToLogin()\n    }\n    return refreshAccessTokenImpl(refreshToken)\n}\n\nfunction refreshAccessTokenImpl(refreshToken) {\n    const urlParams = {\n        deviceId: 'xxxxxx',\n        app: 6,\n        refreshToken: refreshToken\n    }\n    const config = {\n        method: 'post',\n        url: `/manage/auth/access_token/refresh`,\n        data: urlParams\n    }\n    return requestWithoutAction(config)\n}\n\nexport function requestWithAction(config, action) {\n    return instance(config)\n        .then(response => {\n            if (response) {\n                const data =\n                    response.data.result == null || Object.keys(response.data.result).length === 0\n                        ? {}\n                        : response.data.result\n                store.dispatch(action(data))\n            }\n        })\n        .catch(error => {\n            console.error(error)\n        })\n}\n\nexport function requestWithoutAction(config) {\n    return instance(config)\n        .then(response => {\n            if (response) {\n                const data =\n                    response.data.result == null || Object.keys(response.data.result).length === 0\n                        ? {}\n                        : response.data.result\n                return data\n            }\n        })\n        .catch(error => {\n            console.error(error)\n        })\n}\n"],"sourceRoot":""}
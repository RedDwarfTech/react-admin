{"version":3,"sources":["utils/loadable.js","actions/UserActions.js","reducers/userReducer.js","reducers/channelReducer.js","reducers/articleReducer.js","reducers/dashboardReducer.js","reducers/appReducer.js","reducers/tagReducer.js","reducers/app/music/fav/favMusicReducer.js","reducers/app/cernitor/domain/domainReducer.js","reducers/app/dict/translate/translateReducer.js","store/index.js","App.js","index.js"],"names":["loadingComponent","props","NProgress","start","done","Component","loader","loading","Loadable","login","request","type","payload","getUserListAction","removeUserAction","changeUserPasswordAction","userReducer","state","token","user","action","channelReducer","channel","articleReducer","article","articleDetail","dashboardReducer","dashboard","trend","appReducer","app","tagReducer","tag","favMusicReducer","favMusic","domainReducer","domain","translateReducer","translate","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combineReducers","applyMiddleware","reduxThunk","DefaultLayout","loadable","View404","View500","Login","App","path","exact","render","to","component","React","connect","dispatch","data","AppView","store","ReactDOM","document","getElementById"],"mappings":"wMAKMA,G,wDACF,WAAYC,GAAQ,IAAD,6BACf,cAAMA,GACNC,IAAUC,QAFK,E,qDAInB,WACID,IAAUE,S,oBAEd,WACI,OAAO,kC,GATgBC,cAahB,aAACC,GAAwC,IAAhCC,EAA+B,uDAArBP,EAC9B,OAAOQ,IAAS,CACZF,SACAC,c,gCClBD,SAASE,EAAMC,GAClB,MAAO,CACHC,KAAM,QACNC,QAASF,GAIV,SAASG,EAAkBH,GAC9B,MAAO,CACHC,KAAM,gBACNC,QAASF,GAIV,SAASI,EAAiBJ,GAC7B,MAAO,CACHC,KAAM,cACNC,QAASF,GAIV,SAASK,EAAyBL,GACrC,MAAO,CACHC,KAAM,uBACNC,QAASF,GA3BjB,yI,mDC4CeM,EAxCK,WAMd,IALFC,EAKC,uDALO,CACJC,MAAO,GACPC,KAAM,IAEVC,EACC,uCACD,OAAQA,EAAOT,MACX,IAAK,QACDM,EAAK,2BACEA,GADF,IAEDC,MAAOE,EAAOR,UAElB,MACJ,IAAK,gBACDK,EAAK,2BACEA,GADF,IAEDE,KAAMC,EAAOR,UAEjB,MACJ,IAAK,cAOL,IAAK,uBACDK,EAAK,2BACEA,GADF,IAEDE,KAAM,GACND,MAAO,KAMnB,OAAOD,GCfII,EAtBQ,WAER,IAFSJ,EAEV,uDAFkB,CAC5BK,QAAS,IACVF,EAAW,uCACV,OAAQA,EAAOT,MACX,IAAK,mBAML,IAAK,eACDM,EAAK,2BACEA,GADF,IAEDK,QAASF,EAAOR,UAM5B,OAAOK,GCOIM,EA1BQ,WAMjB,IALFN,EAKC,uDALO,CACJO,QAAS,GACTC,cAAc,IAElBL,EACC,uCACD,OAAQA,EAAOT,MACX,IAAK,mBACDM,EAAK,2BACEA,GADF,IAEDO,QAASJ,EAAOR,UAEpB,MACJ,IAAK,qBACDK,EAAK,2BACEA,GADF,IAEDQ,cAAeL,EAAOR,UAMlC,OAAOK,GCGIS,EA1BU,WAMnB,IALFT,EAKC,uDALO,CACJU,UAAW,GACXC,MAAO,IAEXR,EACC,uCACD,OAAQA,EAAOT,MACX,IAAK,qBACDM,EAAK,2BACEA,GADF,IAEDU,UAAWP,EAAOR,UAEtB,MACJ,IAAK,iBACDK,EAAK,2BACEA,GADF,IAEDW,MAAOR,EAAOR,UAM1B,OAAOK,GCPIY,EAhBI,WAEJ,IAFKZ,EAEN,uDAFc,CACxBa,IAAK,IACNV,EAAW,uCACV,OAAQA,EAAOT,MACX,IAAK,eACDM,EAAK,2BACEA,GADF,IAEDa,IAAKV,EAAOR,UAMxB,OAAOK,GCGIc,EAhBI,WAEJ,IAFKd,EAEN,uDAFc,CACxBe,IAAK,IACNZ,EAAW,uCACV,OAAQA,EAAOT,MACX,IAAK,eACDM,EAAK,2BACEA,GADF,IAEDe,IAAKZ,EAAOR,UAMxB,OAAOK,G,QCMIgB,EAnBS,WAKlB,IAJFhB,EAIC,uDAJO,CACJiB,SAAU,IAEdd,EACC,uCACD,OAAQA,EAAOT,MACX,IAAK,qBACDM,EAAK,2BACEA,GADF,IAEDiB,SAAUd,EAAOR,UAM7B,OAAOK,GCGIkB,EAnBO,WAKhB,IAJFlB,EAIC,uDAJO,CACJmB,OAAQ,IAEZhB,EACC,uCACD,OAAQA,EAAOT,MACX,IAAK,kBACDM,EAAK,2BACEA,GADF,IAEDmB,OAAQhB,EAAOR,UAM3B,OAAOK,GCGIoB,EAnBU,WAKnB,IAJFpB,EAIC,uDAJO,CACJqB,UAAW,IAEflB,EACC,uCACD,OAAQA,EAAOT,MACX,IAAK,gBACDM,EAAK,2BACEA,GADF,IAEDqB,UAAWlB,EAAOR,UAM9B,OAAOK,GCRLsB,EAAmBC,OAAOC,sCAAwCC,IAEzDC,gBACXC,YAAgB,CACZzB,OACAG,UACAE,UACAG,YACAG,MACAE,MACAE,WACAE,SACAE,cAEJC,EAAiBM,YAAgBC,Q,qPChB/BC,EAAgBC,aAAS,kBAAM,+DAG/BC,EAAUD,aAAS,kBAAM,iCACzBE,EAAUF,aAAS,kBAAM,iCACzBG,EAAQH,aAAS,kBAAM,8EAEvBI,E,4JACF,WAAU,IAAD,OACL,OAAQ,kBAAC,IAAD,KACJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAM,kBAAC,IAAD,CAAUC,GAAG,cACjD,kBAAC,IAAD,CAAOH,KAAK,OAAOI,UAAWP,IAC9B,kBAAC,IAAD,CAAOG,KAAK,SAASE,OAAQ,SAACtD,GAAD,OAAW,kBAACkD,EAAD,CAAOhC,KAAM,EAAKlB,MAAMkB,UAChE,kBAAC,IAAD,CAAOkC,KAAK,OAAOI,UAAWR,IAC9B,kBAAC,IAAD,CAAOQ,UAAWV,U,GARhBW,IAAMrD,WA4BTsD,eAdS,SAAC1C,GACrB,MAAO,CACHE,KAAMF,EAAME,SAIO,SAACyC,GACxB,MAAO,CACHnD,MAAO,SAACoD,GACJD,EAASnD,YAAMoD,QAKZF,CAA6CP,G,QCvCtDU,EACF,kBAAC,IAAD,CAAUC,MAAOA,KACb,kBAAC,EAAD,OAIRC,IAAST,OAAOO,EAASG,SAASC,eAAe,W","file":"static/js/main.adadd685.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Loadable from 'react-loadable'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nclass loadingComponent extends Component {\n    constructor(props) {\n        super(props)\n        NProgress.start()\n    }\n    componentDidMount() {\n        NProgress.done()\n    }\n    render() {\n        return <div />\n    }\n}\n\nexport default (loader, loading = loadingComponent) => {\n    return Loadable({\n        loader,\n        loading\n    })\n}\n","/**\n * Created by dolphin on 15/7/2017.\n */\nexport function login(request) {\n    return {\n        type: 'LOGIN',\n        payload: request\n    }\n}\n\nexport function getUserListAction(request) {\n    return {\n        type: 'GET_USER_LIST',\n        payload: request\n    }\n}\n\nexport function removeUserAction(request) {\n    return {\n        type: 'REMOVE_USER',\n        payload: request\n    }\n}\n\nexport function changeUserPasswordAction(request) {\n    return {\n        type: 'CHANGE_USER_PASSWORD',\n        payload: request\n    }\n}\n","/**\n * Created by dolphin on 15/7/2017.\n */\n\nconst userReducer = (\n    state = {\n        token: '',\n        user: {}\n    },\n    action\n) => {\n    switch (action.type) {\n        case 'LOGIN':\n            state = {\n                ...state,\n                token: action.payload\n            }\n            break\n        case 'GET_USER_LIST':\n            state = {\n                ...state,\n                user: action.payload\n            }\n            break\n        case 'REMOVE_USER':\n            state = {\n                ...state,\n                user: {},\n                token: ''\n            }\n            break\n        case 'CHANGE_USER_PASSWORD':\n            state = {\n                ...state,\n                user: {},\n                token: ''\n            }\n            break\n        default:\n            break\n    }\n    return state\n}\n\nexport default userReducer\n","/**\n * Created by dolphin on 15/7/2017.\n */\n\nconst channelReducer = (state = {\n    channel: {}\n}, action) => {\n    switch (action.type) {\n        case \"GET_CHANNEL_LIST\":\n            state = {\n                ...state,\n                channel: action.payload\n            };\n            break;\n        case \"EDIT_CHANNEL\":\n            state = {\n                ...state,\n                channel: action.payload\n            };\n            break;\n        default:\n            break;\n    }\n    return state;\n};\n\nexport default channelReducer;","/**\n * Created by dolphin on 15/7/2017.\n */\n\nconst articleReducer = (\n    state = {\n        article: {},\n        articleDetail:{}\n    },\n    action\n) => {\n    switch (action.type) {\n        case 'GET_ARTICLE_LIST':\n            state = {\n                ...state,\n                article: action.payload\n            }\n            break\n        case 'GET_ARTICLE_DETAIL':\n            state = {\n                ...state,\n                articleDetail: action.payload\n            }\n            break\n        default:\n            break\n    }\n    return state\n}\n\nexport default articleReducer\n","/**\n * Created by dolphin on 15/7/2017.\n */\n\nconst dashboardReducer = (\n    state = {\n        dashboard: {},\n        trend: {}\n    },\n    action\n) => {\n    switch (action.type) {\n        case 'GET_DASHBOARD_DATA':\n            state = {\n                ...state,\n                dashboard: action.payload\n            }\n            break\n        case 'GET_TREND_DATA':\n            state = {\n                ...state,\n                trend: action.payload\n            }\n            break\n        default:\n            break\n    }\n    return state\n}\n\nexport default dashboardReducer\n","/**\n * Created by dolphin on 15/7/2017.\n */\n\nconst appReducer = (state = {\n    app: {}\n}, action) => {\n    switch (action.type) {\n        case \"GET_APP_LIST\":\n            state = {\n                ...state,\n                app: action.payload\n            };\n            break;\n        default:\n            break;\n    }\n    return state;\n};\n\nexport default appReducer;","/**\n * Created by dolphin on 15/7/2017.\n */\n\nconst tagReducer = (state = {\n    tag: {}\n}, action) => {\n    switch (action.type) {\n        case \"GET_TAG_LIST\":\n            state = {\n                ...state,\n                tag: action.payload\n            };\n            break;\n        default:\n            break;\n    }\n    return state;\n};\n\nexport default tagReducer;","/**\n * Created by dolphin on 15/7/2017.\n */\n\nconst favMusicReducer = (\n    state = {\n        favMusic: {}\n    },\n    action\n) => {\n    switch (action.type) {\n        case 'GET_FAV_MUSIC_PAGE':\n            state = {\n                ...state,\n                favMusic: action.payload\n            }\n            break\n        default:\n            break\n    }\n    return state\n}\n\nexport default favMusicReducer\n","/**\n * Created by dolphin on 15/7/2017.\n */\n\nconst domainReducer = (\n    state = {\n        domain: {}\n    },\n    action\n) => {\n    switch (action.type) {\n        case 'GET_DOMAIN_PAGE':\n            state = {\n                ...state,\n                domain: action.payload\n            }\n            break\n        default:\n            break\n    }\n    return state\n}\n\nexport default domainReducer\n","/**\n * Created by dolphin on 15/7/2017.\n */\n\nconst translateReducer = (\n    state = {\n        translate: {}\n    },\n    action\n) => {\n    switch (action.type) {\n        case 'GET_TRANSLATE':\n            state = {\n                ...state,\n                translate: action.payload\n            }\n            break\n        default:\n            break\n    }\n    return state\n}\n\nexport default translateReducer\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport user from '../reducers/userReducer'\nimport channel from '../reducers/channelReducer'\nimport article from '../reducers/articleReducer'\nimport dashboard from '../reducers/dashboardReducer'\nimport app from '../reducers/appReducer'\nimport tag from '../reducers/tagReducer'\nimport reduxThunk from 'redux-thunk'\nimport favMusic from '@/reducers/app/music/fav/favMusicReducer'\nimport domain from '@/reducers/app/cernitor/domain/domainReducer'\nimport translate from '@/reducers/app/dict/translate/translateReducer'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport default createStore(\n    combineReducers({\n        user,\n        channel,\n        article,\n        dashboard,\n        app,\n        tag,\n        favMusic,\n        domain,\n        translate\n    }),\n    composeEnhancers(applyMiddleware(reduxThunk))\n)\n","import React from 'react'\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport loadable from './utils/loadable'\nimport 'animate.css'\nimport './style/base.scss'\nimport './style/App.scss'\nimport {login} from './actions/UserActions'\n\n// 公共模块\nconst DefaultLayout = loadable(() => import(/* webpackChunkName: 'default' */ './containers'))\n\n// 基础页面\nconst View404 = loadable(() => import(/* webpackChunkName: '404' */ './views/Others/404'))\nconst View500 = loadable(() => import(/* webpackChunkName: '500' */ './views/Others/500'))\nconst Login = loadable(() => import(/* webpackChunkName: 'login' */ './views/Login'))\n\nclass App extends React.Component {\n    render() {\n        return (<Router>\n            <Switch>\n                <Route path='/' exact render={() => <Redirect to='/index' />} />\n                <Route path='/500' component={View500} />\n                <Route path='/login' render={(props) => <Login user={this.props.user} />}/>\n                <Route path='/404' component={View404} />\n                <Route component={DefaultLayout} />\n            </Switch>\n        </Router>)\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        login: (data) => {\n            dispatch(login(data));\n        },\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nconst AppView = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(AppView, document.getElementById('root'))\n"],"sourceRoot":""}